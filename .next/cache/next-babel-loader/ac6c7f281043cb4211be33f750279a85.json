{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Icon, Menu, Segment, Sidebar, Checkbox } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport { handleLogout } from '../../utils/auth';\n\nconst AdminSidebar = ({\n  children,\n  user\n}) => {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(true);\n  const router = useRouter();\n  const isRoot = user && user.role == 'root';\n  const isAdmin = user && user.role == 'admin';\n  const isRootOrAdmin = isRoot || isAdmin;\n\n  const isActive = route => {\n    return route == router.pathname;\n  };\n\n  const handleVisible = () => {\n    setVisible(prevState => !prevState);\n  };\n\n  return __jsx(Sidebar.Pushable, null, __jsx(Sidebar, {\n    as: Menu,\n    animation: \"push\",\n    icon: \"labeled\",\n    vertical: true,\n    visible: visible,\n    width: \"thin\"\n  }, isRootOrAdmin && __jsx(React.Fragment, null, __jsx(Menu.Item, {\n    as: \"a\",\n    onClick: () => router.push('/admin/dashboard'),\n    active: isActive('/admin/dashboard')\n  }, __jsx(Icon, {\n    name: \"dashboard\"\n  }), \"Dashboard\"), __jsx(Menu.Item, {\n    as: \"a\",\n    onClick: () => router.push('/admin/add-product'),\n    active: isActive('/admin/add-product')\n  }, __jsx(Icon, {\n    name: \"add square\"\n  }), \"Criar Produto\"), __jsx(Menu.Item, {\n    as: \"a\",\n    onClick: () => router.push('/admin/orders'),\n    active: isActive('/admin/orders')\n  }, __jsx(Icon, {\n    name: \"ordered list\"\n  }), \"Ordems\"), __jsx(Menu.Item, {\n    as: \"a\",\n    onClick: () => router.push('/admin/customers'),\n    active: isActive('/admin/customers')\n  }, __jsx(Icon, {\n    name: \"users\"\n  }), \"Clientes\"), isRoot && __jsx(React.Fragment, null, __jsx(Menu.Item, {\n    as: \"a\",\n    onClick: () => router.push('/admin/users'),\n    active: isActive('/admin/users')\n  }, __jsx(Icon, {\n    name: \"users\"\n  }), \"Admin/Users\")), __jsx(Menu.Item, {\n    as: \"a\",\n    onClick: handleLogout\n  }, __jsx(Icon, {\n    name: \"sign-out\"\n  }), \"Logout\"))), __jsx(Sidebar.Pusher, null, __jsx(Checkbox, {\n    toggle: true,\n    label: visible ? 'Hide Sidebar' : 'Show Sidebar',\n    onClick: handleVisible\n  }), __jsx(Segment, {\n    basic: true\n  }, children)));\n};\n\nexport default AdminSidebar;","map":null,"metadata":{},"sourceType":"module"}