{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\walter\\\\Desktop\\\\shoponix-mern-next-ecommerce-store\\\\shoponix\\\\components\\\\Orders\\\\OrderStatus.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Label, Checkbox, Popup } from 'semantic-ui-react';\nimport formatDate from '../../utils/formatDate';\nimport baseUrl from '../../utils/baseUrl';\n\nvar OrderStatus = function OrderStatus(_ref) {\n  _s();\n\n  var order = _ref.order;\n\n  var _React$useState = React.useState(order.status === 'delivered'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      delivered = _React$useState2[0],\n      setDelivered = _React$useState2[1];\n\n  var isFirstRun = useRef(true);\n  useEffect(function () {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    updateStatus();\n  }, [delivered]);\n\n  var updateStatus = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, payload;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(baseUrl, \"/api/orders\");\n              payload = {\n                _id: order._id,\n                status: delivered ? \"delivered\" : \"pending\"\n              };\n              _context.next = 4;\n              return axios.put(url, payload);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateStatus() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChangeStatus = function handleChangeStatus() {\n    setDelivered(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Label, {\n    color: \"blue\",\n    content: formatDate(order.createdAt),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), __jsx(Popup, {\n    trigger: __jsx(Checkbox, {\n      toggle: true,\n      onChange: handleChangeStatus,\n      label: delivered ? \"Delivered\" : \"Pending\",\n      checked: delivered,\n      fitted: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }),\n    header: \"Delivery Status\",\n    content: delivered ? \"Delivered\" : \"Pending\",\n    position: \"top center\",\n    on: ['hover'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(OrderStatus, \"WCGJ2HmQoKRbdH4jnvstOO8d/EE=\");\n\n_c = OrderStatus;\nexport default OrderStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderStatus\");","map":{"version":3,"sources":["C:/Users/walter/Desktop/shoponix-mern-next-ecommerce-store/shoponix/components/Orders/OrderStatus.js"],"names":["React","useEffect","useRef","axios","Label","Checkbox","Popup","formatDate","baseUrl","OrderStatus","order","useState","status","delivered","setDelivered","isFirstRun","current","updateStatus","url","payload","_id","put","handleChangeStatus","prevState","createdAt"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,KAA1B,QAAuC,mBAAvC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAa;AAAA;;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,wBACKV,KAAK,CAACW,QAAN,CAAeD,KAAK,CAACE,MAAN,KAAiB,WAAhC,CADL;AAAA;AAAA,MACtBC,SADsB;AAAA,MACXC,YADW;;AAG7B,MAAMC,UAAU,GAAGb,MAAM,CAAC,IAAD,CAAzB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGc,UAAU,CAACC,OAAd,EAAsB;AAClBD,MAAAA,UAAU,CAACC,OAAX,GAAqB,KAArB;AACA;AACH;;AACDC,IAAAA,YAAY;AACf,GANQ,EAMN,CAACJ,SAAD,CANM,CAAT;;AAQA,MAAMI,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,GADW,aACFV,OADE;AAEXW,cAAAA,OAFW,GAED;AAAEC,gBAAAA,GAAG,EAAEV,KAAK,CAACU,GAAb;AAAkBR,gBAAAA,MAAM,EAAEC,SAAS,GAAG,WAAH,GAAiB;AAApD,eAFC;AAAA;AAAA,qBAGXV,KAAK,CAACkB,GAAN,CAAUH,GAAV,EAAeC,OAAf,CAHW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZF,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAMA,MAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7BR,IAAAA,YAAY,CAAC,UAAAS,SAAS;AAAA,aAAI,CAACA,SAAL;AAAA,KAAV,CAAZ;AACH,GAFD;;AAIA,SACI,4BACI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAEhB,UAAU,CAACG,KAAK,CAACc,SAAP,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,KAAD;AACI,IAAA,OAAO,EACH,MAAC,QAAD;AACI,MAAA,MAAM,MADV;AAEI,MAAA,QAAQ,EAAEF,kBAFd;AAGI,MAAA,KAAK,EAAET,SAAS,GAAG,WAAH,GAAiB,SAHrC;AAII,MAAA,OAAO,EAAEA,SAJb;AAKI,MAAA,MAAM,EAAE,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAUI,IAAA,MAAM,EAAC,iBAVX;AAWI,IAAA,OAAO,EAAEA,SAAS,GAAG,WAAH,GAAiB,SAXvC;AAYI,IAAA,QAAQ,EAAC,YAZb;AAaI,IAAA,EAAE,EAAE,CAAC,OAAD,CAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAoBH,CA3CD;;GAAMJ,W;;KAAAA,W;AA6CN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Label, Checkbox, Popup } from 'semantic-ui-react';\nimport formatDate from '../../utils/formatDate';\nimport baseUrl from '../../utils/baseUrl';\n\nconst OrderStatus = ({order}) => {\n    const [delivered, setDelivered] = React.useState(order.status === 'delivered');\n\n    const isFirstRun = useRef(true);\n\n    useEffect(() => {\n        if(isFirstRun.current){\n            isFirstRun.current = false;\n            return;\n        }\n        updateStatus();\n    }, [delivered]);\n\n    const updateStatus = async () => {\n        const url = `${baseUrl}/api/orders`\n        const payload = { _id: order._id, status: delivered ? \"delivered\" : \"pending\" };\n        await axios.put(url, payload);\n    }\n\n    const handleChangeStatus = () => {\n        setDelivered(prevState => !prevState)\n    }\n\n    return(\n        <>\n            <Label color=\"blue\" content={formatDate(order.createdAt)}/>\n            <Popup \n                trigger={\n                    <Checkbox \n                        toggle \n                        onChange={handleChangeStatus}\n                        label={delivered ? \"Delivered\" : \"Pending\"}\n                        checked={delivered}\n                        fitted={true}\n                    />\n                }\n                header='Delivery Status'\n                content={delivered ? \"Delivered\" : \"Pending\"}\n                position='top center'\n                on={['hover']}\n            />\n        </>\n    )\n}\n\nexport default OrderStatus;"]},"metadata":{},"sourceType":"module"}