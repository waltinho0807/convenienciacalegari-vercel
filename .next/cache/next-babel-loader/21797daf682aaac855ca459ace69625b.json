{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport { Checkbox, Table } from 'semantic-ui-react';\nimport axios from 'axios';\nimport baseUrl from '../../utils/baseUrl';\nimport formatDate from '../../utils/formatDate';\n\nvar AllUsers = function AllUsers(_ref) {\n  var user = _ref.user;\n\n  var _React$useState = React.useState(user.role === 'admin'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      admin = _React$useState2[0],\n      setAdmin = _React$useState2[1];\n\n  var isFirstRun = useRef(true);\n  useEffect(function () {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    updatePermission();\n  }, [admin]);\n\n  var updatePermission = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, payload;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(baseUrl, \"/api/account\");\n              payload = {\n                _id: user._id,\n                role: admin ? \"admin\" : \"user\"\n              };\n              _context.next = 4;\n              return axios.put(url, payload);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updatePermission() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChangePermission = function handleChangePermission() {\n    setAdmin(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  return __jsx(Table.Row, null, __jsx(Table.Cell, {\n    collapsing: true\n  }, __jsx(Checkbox, {\n    checked: admin,\n    toggle: true,\n    onChange: handleChangePermission\n  })), __jsx(Table.Cell, null, user.name), __jsx(Table.Cell, null, user.email), __jsx(Table.Cell, null, formatDate(user.createdAt)), __jsx(Table.Cell, null, formatDate(user.updatedAt)), __jsx(Table.Cell, null, admin ? \"Admin\" : \"User\"));\n};\n\nexport default AllUsers;","map":null,"metadata":{},"sourceType":"module"}