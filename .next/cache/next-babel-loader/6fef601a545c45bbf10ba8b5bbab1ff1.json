{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport { Header, Table, Icon } from 'semantic-ui-react';\nimport baseUrl from '../../utils/baseUrl';\nimport AllUsers from './AllUsers';\n\nconst UsersWithPermissions = () => {\n  const [users, setUsers] = React.useState([]);\n  React.useEffect(() => {\n    getUsers();\n  }, []);\n\n  const getUsers = async () => {\n    const url = `${baseUrl}/api/users`;\n    const token = cookie.get('token');\n    const payload = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const response = await axios.get(url, payload);\n    setUsers(response.data);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\"\n  }, __jsx(Icon, {\n    name: \"settings\"\n  }), \"Users With Permissions\"), __jsx(Table, {\n    compact: true,\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Switch\"), __jsx(Table.HeaderCell, null, \"Name\"), __jsx(Table.HeaderCell, null, \"Email\"), __jsx(Table.HeaderCell, null, \"Joined\"), __jsx(Table.HeaderCell, null, \"Updated\"), __jsx(Table.HeaderCell, null, \"Role\"))), __jsx(Table.Body, null, users.map(user => __jsx(AllUsers, {\n    key: user._id,\n    user: user\n  })))));\n};\n\nexport default UsersWithPermissions;","map":null,"metadata":{},"sourceType":"module"}