{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\walter\\\\Desktop\\\\shoponix-mern-next-ecommerce-store\\\\shoponix\\\\components\\\\Product\\\\AddProductToCart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Input } from \"semantic-ui-react\";\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport baseUrl from '../../utils/baseUrl';\nimport catchErrors from '../../utils/catchErrors';\n\nconst AddProductToCart = ({\n  user,\n  productId\n}) => {\n  const [quantity, setQuantity] = React.useState(1);\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const router = useRouter();\n  React.useEffect(() => {\n    let timeout;\n\n    if (success) {\n      timeout = setTimeout(() => {\n        setSuccess(false);\n      }, 3000);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [success]);\n\n  const handleAddProductToCart = async () => {\n    try {\n      setLoading(true);\n      const url = `${baseUrl}/api/cart`;\n      const payload = {\n        quantity,\n        productId\n      };\n      const token = cookie.get('token');\n      const headers = {\n        headers: {\n          Authorization: token\n        }\n      };\n      await axios.put(url, payload, headers);\n      setSuccess(true);\n    } catch (error) {\n      catchErrors(error, window.alert);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    min: \"1\",\n    max: \"10\",\n    placeholder: \"Quantity\",\n    value: quantity,\n    onChange: e => setQuantity(Number(e.target.value)),\n    action: user && success ? {\n      color: 'blue',\n      content: 'Item Added!',\n      icon: 'plus cart',\n      disabled: true\n    } : user ? {\n      color: 'violet',\n      content: 'Add to Cart',\n      icon: 'plus cart',\n      loading: loading,\n      disbaled: `${loading}`,\n      onClick: handleAddProductToCart\n    } : {\n      color: 'green',\n      content: 'Login to purchase',\n      icon: 'sign-in',\n      onClick: () => router.push('/auth/login')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default AddProductToCart;","map":{"version":3,"sources":["C:/Users/walter/Desktop/shoponix-mern-next-ecommerce-store/shoponix/components/Product/AddProductToCart.js"],"names":["React","Input","useRouter","axios","cookie","baseUrl","catchErrors","AddProductToCart","user","productId","quantity","setQuantity","useState","loading","setLoading","success","setSuccess","router","useEffect","timeout","setTimeout","clearTimeout","handleAddProductToCart","url","payload","token","get","headers","Authorization","put","error","window","alert","e","Number","target","value","color","content","icon","disabled","disbaled","onClick","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input } from \"semantic-ui-react\";\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport baseUrl from '../../utils/baseUrl';\nimport catchErrors from '../../utils/catchErrors';\n\nconst AddProductToCart = ({ user, productId }) => {\n    const [quantity, setQuantity] = React.useState(1);\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const router = useRouter();\n\n    React.useEffect(() => {\n        let timeout;\n        if (success){\n            timeout = setTimeout(() => {\n                setSuccess(false)\n            }, 3000);\n        }\n        return () => {\n            clearTimeout(timeout);\n        }\n    }, [success])\n\n    const handleAddProductToCart = async () => {\n        try {\n            setLoading(true);\n            const url = `${baseUrl}/api/cart`;\n            const payload = { quantity, productId };\n            const token = cookie.get('token');\n            const headers = { headers: {Authorization: token} };\n            await axios.put(url, payload, headers);\n            setSuccess(true);\n        } catch (error) {\n            catchErrors(error, window.alert);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Input \n                type=\"number\"\n                min=\"1\"\n                max=\"10\"\n                placeholder=\"Quantity\"\n                value={quantity}\n                onChange={e => setQuantity(Number(e.target.value))}\n                action={\n                    user && success ? {\n                        color: 'blue',\n                        content: 'Item Added!',\n                        icon: 'plus cart',\n                        disabled: true\n                    } : \n                    user ? {\n                    color: 'violet',\n                    content: 'Add to Cart',\n                    icon: 'plus cart',\n                    loading: loading,\n                    disbaled: `${loading}`,\n                    onClick: handleAddProductToCart\n                } : {\n                    color: 'green',\n                    content: 'Login to purchase',\n                    icon: 'sign-in',\n                    onClick: () => router.push('/auth/login')\n                }}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default AddProductToCart;\n"]},"metadata":{},"sourceType":"module"}