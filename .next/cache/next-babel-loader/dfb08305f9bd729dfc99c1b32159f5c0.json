{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Form, Input, TextArea, Button, Image, Message, Header, Icon } from 'semantic-ui-react';\nimport axios from 'axios';\nimport baseUrl from '../../../../utils/baseUrl';\nimport catchErrors from '../../../../utils/catchErrors';\nimport AdminSidebar from '../../../../components/_App/AdminSidebar';\nconst options = [{\n  key: 't-shirt',\n  text: 'T-Shirt',\n  value: 't-shirt'\n}, {\n  key: 'fashion',\n  text: 'Fashion',\n  value: 'fashion'\n}, {\n  key: 'furniture',\n  text: 'Furniture',\n  value: 'furniture'\n}, {\n  key: 'jewelry',\n  text: 'Jewelry',\n  value: 'jewelry'\n}, {\n  key: 'book-magazine',\n  text: 'Book and Magazine',\n  value: 'book-magazine'\n}, {\n  key: 'electronics',\n  text: 'Electronics',\n  value: 'electronics'\n}, {\n  key: 'medical',\n  text: 'Medical',\n  value: 'medical'\n}, {\n  key: 'home-decor',\n  text: 'Home Decor',\n  value: 'home-decor'\n}, {\n  key: 'grocery',\n  text: 'Grocery',\n  value: 'grocery'\n}, {\n  key: 'other',\n  text: 'Other',\n  value: 'other'\n}];\n\nconst Edit = ({\n  user,\n  getProduct\n}) => {\n  // console.log(getProduct)\n  const [product, setProduct] = React.useState({\n    _id: getProduct._id,\n    name: getProduct.name,\n    price: getProduct.price,\n    productType: getProduct.productType,\n    media: getProduct.mediaUrl,\n    description: getProduct.description\n  });\n  const [mediaPreview, setMediaPreview] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false); // const [disabled, setDisabled] = React.useState(true);\n\n  const [error, setError] = React.useState();\n\n  const handleChanhe = e => {\n    // console.log(d.value)\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    if (name === 'media') {\n      setProduct(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        media: files[0]\n      }));\n      setMediaPreview(window.URL.createObjectURL(files[0]));\n    } else {\n      setProduct(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        [name]: value\n      }));\n    } // console.log(product);\n\n  };\n\n  const handleImageUpload = async () => {\n    if (getProduct.mediaUrl === product.media) {\n      return product.media;\n    }\n\n    const data = new FormData();\n    data.append('file', product.media);\n    data.append('upload_preset', 'vikings');\n    data.append('cloud_name', 'dev-empty');\n    const response = await axios.post(process.env.CLOUDINARY_URL, data);\n    const mediaUrl = response.data.url;\n    return mediaUrl;\n  };\n\n  const handleSelectInput = (e, d) => {\n    setProduct(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      productType: d.value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // console.log(product)\n\n    try {\n      setLoading(true);\n      setError('');\n      const imageUrl = await handleImageUpload(); // console.log(imageUrl)\n\n      const mediaUrl = imageUrl.replace(/^http:\\/\\//i, 'https://'); // console.log(mediaUrl)\n\n      const url = `${baseUrl}/api/product`;\n      const {\n        _id,\n        name,\n        price,\n        description,\n        productType\n      } = product;\n      const payload = {\n        _id,\n        name,\n        price,\n        description,\n        productType,\n        mediaUrl\n      };\n      await axios.put(url, payload);\n      setLoading(false); // console.log({response})\n\n      setSuccess(true);\n    } catch (error) {\n      catchErrors(error, setError);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return __jsx(AdminSidebar, {\n    user: user\n  }, __jsx(\"div\", {\n    className: \"create-new-products-area\"\n  }, __jsx(Header, {\n    as: \"h2\",\n    block: true\n  }, __jsx(Icon, {\n    name: \"edit\",\n    color: \"orange\"\n  }), \"Edit This Product (\", getProduct.name, \")\"), __jsx(Form, {\n    loading: loading,\n    success: success,\n    error: Boolean(error),\n    onSubmit: handleSubmit\n  }, __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: error\n  }), __jsx(Message, {\n    success: true,\n    icon: \"check\",\n    header: \"Success!\",\n    content: \"Your product has been submitted\"\n  }), __jsx(Form.Group, {\n    widths: \"equal\"\n  }, __jsx(Form.Field, {\n    control: Input,\n    name: \"name\",\n    label: \"Name\",\n    placeholder: \"Name\",\n    value: product.name,\n    onChange: handleChanhe\n  }), __jsx(Form.Field, {\n    control: Input,\n    name: \"price\",\n    label: \"Price\",\n    placeholder: \"Price\",\n    min: \"0.00\",\n    step: \"0.01\",\n    type: \"number\",\n    value: product.price,\n    onChange: handleChanhe\n  }), __jsx(Form.Select, {\n    name: \"type\",\n    label: \"Type\",\n    options: options,\n    placeholder: \"Type\",\n    onChange: handleSelectInput,\n    defaultValue: product.productType\n  })), __jsx(Form.Field, {\n    control: Input,\n    name: \"media\",\n    type: \"file\",\n    label: \"Media\",\n    accept: \"image/*\",\n    content: \"Select Image\",\n    onChange: handleChanhe\n  }), __jsx(Image, {\n    src: mediaPreview || getProduct.mediaUrl,\n    rounded: true,\n    centered: true,\n    size: \"small\"\n  }), __jsx(Form.Field, {\n    control: TextArea,\n    name: \"description\",\n    label: \"Description\",\n    placeholder: \"Description\",\n    value: product.description,\n    onChange: handleChanhe\n  }), __jsx(Form.Field, {\n    control: Button,\n    disabled: loading,\n    color: \"green\",\n    icon: \"pencil alternate\",\n    content: \"Submit\",\n    type: \"submit\"\n  }))));\n};\n\nEdit.getInitialProps = async ({\n  query: {\n    id\n  }\n}) => {\n  // console.log(id)\n  const url = `${baseUrl}/api/product`;\n  const payload = {\n    params: {\n      id\n    }\n  };\n  const response = await axios.get(url, payload);\n  return {\n    getProduct: response.data.product\n  };\n};\n\nexport default Edit;","map":null,"metadata":{},"sourceType":"module"}