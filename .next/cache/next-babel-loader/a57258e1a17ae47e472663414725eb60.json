{"ast":null,"code":"import shortid from 'shortid';\nimport Product from '../../models/Product';\nimport Cart from '../../models/Cart';\nimport Order from '../../models/Order';\nimport connectDb from '../../utils/connectDb';\nconnectDb();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n\n    case \"POST\":\n      await handlePostRequest(req, res);\n      break;\n\n    case \"PUT\":\n      await handlePutRequest(req, res);\n      break;\n\n    case \"DELETE\":\n      await handleDeleteRequest(req, res);\n      break;\n\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n});\n\nconst handleGetRequest = async (req, res) => {\n  const {\n    id\n  } = req.query;\n  const product = await Product.findOneAndUpdate({\n    _id: id\n  }, {\n    $inc: {\n      viewCount: 1\n    }\n  });\n  const {\n    productType\n  } = product;\n  const related = await Product.find({\n    productType: productType\n  }).sort({\n    viewCount: 'desc'\n  }).limit(4);\n  res.status(200).json({\n    product,\n    related\n  });\n};\n\nconst handlePostRequest = async (req, res) => {\n  const {\n    name,\n    price,\n    description,\n    productType,\n    mediaUrl\n  } = req.body;\n  const sku = shortid.generate();\n\n  try {\n    if (!name || !price || !description || !sku || !mediaUrl) {\n      return res.status(422).send(\"Product missing one or more fields\");\n    }\n\n    const product = await new Product({\n      name,\n      sku,\n      price,\n      description,\n      productType,\n      mediaUrl\n    }).save();\n    res.status(200).json(product);\n  } catch (error) {\n    // console.error(error)\n    res.status(500).send(\"Error creating product on the Server\");\n  }\n};\n\nconst handlePutRequest = async (req, res) => {\n  // console.log(req.body)\n  const {\n    _id,\n    name,\n    price,\n    description,\n    productType,\n    mediaUrl\n  } = req.body;\n  await Product.updateOne({\n    _id\n  }, {\n    $set: {\n      name,\n      price,\n      description,\n      productType,\n      mediaUrl\n    },\n    $currentDate: {\n      updatedAt: true\n    }\n  }); // console.log(up)\n\n  res.status(203).send('Product Updated');\n};\n\nconst handleDeleteRequest = async (req, res) => {\n  const {\n    _id\n  } = req.query;\n\n  try {\n    await Product.findByIdAndDelete({\n      _id\n    });\n    await Cart.updateMany({\n      \"products.product\": _id\n    }, {\n      $pull: {\n        products: {\n          product: _id\n        }\n      }\n    });\n    await Order.updateMany({\n      \"products.product\": _id\n    }, {\n      $pull: {\n        products: {\n          product: _id\n        }\n      }\n    });\n    res.status(204).json({});\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Error deleting products');\n  }\n};","map":{"version":3,"sources":["C:/Users/walter/Desktop/shoponix-mern-next-ecommerce-store/shoponix/pages/api/product.js"],"names":["shortid","Product","Cart","Order","connectDb","req","res","method","handleGetRequest","handlePostRequest","handlePutRequest","handleDeleteRequest","status","send","id","query","product","findOneAndUpdate","_id","$inc","viewCount","productType","related","find","sort","limit","json","name","price","description","mediaUrl","body","sku","generate","save","error","updateOne","$set","$currentDate","updatedAt","findByIdAndDelete","updateMany","$pull","products","console"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEAA,SAAS;AAET,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACI,SAAK,KAAL;AACI,YAAMC,gBAAgB,CAACH,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACJ,SAAK,MAAL;AACI,YAAMG,iBAAiB,CAACJ,GAAD,EAAMC,GAAN,CAAvB;AACA;;AACJ,SAAK,KAAL;AACI,YAAMI,gBAAgB,CAACL,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACJ,SAAK,QAAL;AACI,YAAMK,mBAAmB,CAACN,GAAD,EAAMC,GAAN,CAAzB;AACA;;AACJ;AACIA,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB,UAASR,GAAG,CAACE,MAAO,cAA1C;AACA;AAfR;AAiBH,CAlBD;;AAoBA,MAAMC,gBAAgB,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACzC,QAAM;AAAEQ,IAAAA;AAAF,MAAST,GAAG,CAACU,KAAnB;AACA,QAAMC,OAAO,GAAG,MAAMf,OAAO,CAACgB,gBAAR,CAClB;AAAEC,IAAAA,GAAG,EAAEJ;AAAP,GADkB,EAElB;AAACK,IAAAA,IAAI,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ;AAAP,GAFkB,CAAtB;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAkBL,OAAxB;AACA,QAAMM,OAAO,GAAG,MAAMrB,OAAO,CAACsB,IAAR,CAAa;AAC/BF,IAAAA,WAAW,EAAEA;AADkB,GAAb,EAEnBG,IAFmB,CAEd;AAACJ,IAAAA,SAAS,EAAE;AAAZ,GAFc,EAEOK,KAFP,CAEa,CAFb,CAAtB;AAGAnB,EAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAACV,IAAAA,OAAD;AAAUM,IAAAA;AAAV,GAArB;AACH,CAXD;;AAaA,MAAMb,iBAAiB,GAAG,OAAOJ,GAAP,EAAYC,GAAZ,KAAoB;AAC1C,QAAM;AAAEqB,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,WAAf;AAA4BR,IAAAA,WAA5B;AAAyCS,IAAAA;AAAzC,MAAsDzB,GAAG,CAAC0B,IAAhE;AACA,QAAMC,GAAG,GAAGhC,OAAO,CAACiC,QAAR,EAAZ;;AACA,MAAG;AACC,QAAG,CAACN,IAAD,IAAS,CAACC,KAAV,IAAmB,CAACC,WAApB,IAAmC,CAACG,GAApC,IAA2C,CAACF,QAA/C,EAAwD;AACpD,aAAOxB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oCAArB,CAAP;AACH;;AAED,UAAMG,OAAO,GAAG,MAAM,IAAIf,OAAJ,CAAY;AAC9B0B,MAAAA,IAD8B;AAE9BK,MAAAA,GAF8B;AAG9BJ,MAAAA,KAH8B;AAI9BC,MAAAA,WAJ8B;AAK9BR,MAAAA,WAL8B;AAM9BS,MAAAA;AAN8B,KAAZ,EAOnBI,IAPmB,EAAtB;AASA5B,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqBV,OAArB;AACH,GAfD,CAeE,OAAMmB,KAAN,EAAa;AACX;AACA7B,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sCAArB;AACH;AACJ,CAtBD;;AAwBA,MAAMH,gBAAgB,GAAG,OAAOL,GAAP,EAAYC,GAAZ,KAAoB;AACzC;AACA,QAAM;AAAEY,IAAAA,GAAF;AAAOS,IAAAA,IAAP;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCR,IAAAA,WAAjC;AAA8CS,IAAAA;AAA9C,MAA2DzB,GAAG,CAAC0B,IAArE;AACA,QAAM9B,OAAO,CAACmC,SAAR,CACF;AAAClB,IAAAA;AAAD,GADE,EAEF;AACImB,IAAAA,IAAI,EAAE;AAACV,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,WAAd;AAA2BR,MAAAA,WAA3B;AAAwCS,MAAAA;AAAxC,KADV;AAEIQ,IAAAA,YAAY,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb;AAFlB,GAFE,CAAN,CAHyC,CAUzC;;AACAjC,EAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;AACH,CAZD;;AAcA,MAAMF,mBAAmB,GAAG,OAAON,GAAP,EAAYC,GAAZ,KAAoB;AAC5C,QAAM;AAAEY,IAAAA;AAAF,MAAUb,GAAG,CAACU,KAApB;;AACA,MAAI;AACA,UAAMd,OAAO,CAACuC,iBAAR,CAA0B;AAAEtB,MAAAA;AAAF,KAA1B,CAAN;AACA,UAAMhB,IAAI,CAACuC,UAAL,CACF;AAAE,0BAAoBvB;AAAtB,KADE,EAEF;AAAEwB,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAG;AAAC3B,UAAAA,OAAO,EAAEE;AAAV;AAAb;AAAT,KAFE,CAAN;AAIA,UAAMf,KAAK,CAACsC,UAAN,CACF;AAAE,0BAAoBvB;AAAtB,KADE,EAEF;AAAEwB,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAG;AAAC3B,UAAAA,OAAO,EAAEE;AAAV;AAAb;AAAT,KAFE,CAAN;AAIAZ,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB,EAArB;AACH,GAXD,CAWE,OAAOS,KAAP,EAAc;AACZS,IAAAA,OAAO,CAACT,KAAR,CAAcA,KAAd;AACA7B,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB;AACH;AACJ,CAjBD","sourcesContent":["import shortid from 'shortid';\nimport Product from '../../models/Product';\nimport Cart from '../../models/Cart';\nimport Order from '../../models/Order';\nimport connectDb from '../../utils/connectDb';\n\nconnectDb();\n\nexport default async (req, res) => {\n    switch (req.method){\n        case \"GET\":\n            await handleGetRequest(req, res);\n            break;\n        case \"POST\":\n            await handlePostRequest(req, res);\n            break;\n        case \"PUT\":\n            await handlePutRequest(req, res);\n            break;\n        case \"DELETE\":\n            await handleDeleteRequest(req, res);\n            break;\n        default:\n            res.status(405).send(`Method ${req.method} not allowed`);\n            break;\n    }\n}\n\nconst handleGetRequest = async (req, res) => {\n    const { id } = req.query;\n    const product = await Product.findOneAndUpdate(\n        { _id: id },\n        {$inc: {viewCount: 1} }\n    );\n    const { productType } = product;\n    const related = await Product.find({\n        productType: productType\n    }).sort({viewCount: 'desc'}).limit(4);\n    res.status(200).json({product, related});\n}\n\nconst handlePostRequest = async (req, res) => {\n    const { name, price, description, productType, mediaUrl } = req.body;\n    const sku = shortid.generate();\n    try{\n        if(!name || !price || !description || !sku || !mediaUrl){\n            return res.status(422).send(\"Product missing one or more fields\")\n        }\n    \n        const product = await new Product({\n            name,\n            sku,\n            price,\n            description,\n            productType,\n            mediaUrl\n        }).save();\n    \n        res.status(200).json(product);\n    } catch(error) {\n        // console.error(error)\n        res.status(500).send(\"Error creating product on the Server\");\n    }\n}\n\nconst handlePutRequest = async (req, res) => {\n    // console.log(req.body)\n    const { _id, name, price, description, productType, mediaUrl } = req.body;\n    await Product.updateOne(\n        {_id},\n        {\n            $set: {name, price, description, productType, mediaUrl},\n            $currentDate: { updatedAt: true }\n        }\n    )\n    // console.log(up)\n    res.status(203).send('Product Updated');\n}\n\nconst handleDeleteRequest = async (req, res) => {\n    const { _id } = req.query;\n    try {\n        await Product.findByIdAndDelete({ _id });\n        await Cart.updateMany(\n            { \"products.product\": _id },\n            { $pull: { products:  {product: _id}} }\n        );\n        await Order.updateMany(\n            { \"products.product\": _id },\n            { $pull: { products:  {product: _id}} }\n        )\n        res.status(204).json({});\n    } catch (error) {\n        console.error(error);\n        res.status(500).send('Error deleting products');\n    }\n}"]},"metadata":{},"sourceType":"module"}