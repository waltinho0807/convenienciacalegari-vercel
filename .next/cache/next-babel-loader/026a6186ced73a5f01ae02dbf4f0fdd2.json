{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\walter\\\\Desktop\\\\shoponix-mern-next-ecommerce-store\\\\shoponix\\\\components\\\\Orders\\\\AllOrders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Header, Accordion, Label, Segment, Icon, Button, List, Image } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport OrderStatus from './OrderStatus';\n\nconst AllOrders = ({\n  orders\n}) => {\n  // console.log(orders)\n  const router = useRouter();\n\n  const mapOrdersToPanels = orders => {\n    return orders.map(order => ({\n      key: order._id,\n      title: {\n        content: __jsx(OrderStatus, {\n          order: order,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 21\n          }\n        })\n      },\n      content: {\n        content: __jsx(React.Fragment, null, __jsx(List.Header, {\n          as: \"h3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }\n        }, \"Total: $\", order.total, __jsx(Label, {\n          content: order.email,\n          icon: \"mail\",\n          basic: true,\n          horizontal: true,\n          style: {\n            marginLeft: '1em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }\n        })), __jsx(List, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }\n        }, order.products.map(p => __jsx(List.Item, {\n          key: p.product._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }\n        }, __jsx(Image, {\n          avatar: true,\n          src: p.product.mediaUrl,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 37\n          }\n        }), __jsx(List.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 37\n          }\n        }, __jsx(List.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 41\n          }\n        }, p.product.name), __jsx(List.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 41\n          }\n        }, p.quantity, \" x $\", p.product.price)), __jsx(List.Content, {\n          floated: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }\n        }, __jsx(Label, {\n          tag: true,\n          color: \"red\",\n          size: \"tiny\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 41\n          }\n        }, p.product.sku))))))\n      }\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: \"folder open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), \"Orders\"), orders.length === 0 ? __jsx(Segment, {\n    inverted: true,\n    tertiary: true,\n    color: \"pink\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(Header, {\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, __jsx(Icon, {\n    name: \"copy outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }), \"No Past Orders.\"), __jsx(Button, {\n    onClick: () => router.push('/products'),\n    color: \"violet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"View Products\")) : __jsx(Accordion, {\n    fluid: true,\n    styled: true,\n    exclusive: false,\n    panels: mapOrdersToPanels(orders),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default AllOrders;","map":{"version":3,"sources":["C:/Users/walter/Desktop/shoponix-mern-next-ecommerce-store/shoponix/components/Orders/AllOrders.js"],"names":["Header","Accordion","Label","Segment","Icon","Button","List","Image","useRouter","OrderStatus","AllOrders","orders","router","mapOrdersToPanels","map","order","key","_id","title","content","total","email","marginLeft","products","p","product","mediaUrl","name","quantity","price","sku","length","push"],"mappings":"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","sourcesContent":["import { Header, Accordion, Label, Segment, Icon, Button, List, Image } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport OrderStatus from './OrderStatus';\n\nconst AllOrders = ({ orders }) => {\n    // console.log(orders)\n    const router  = useRouter();\n\n    const mapOrdersToPanels = (orders) => {\n        return orders.map(order => ({\n            key: order._id,\n            title: {\n                content: (\n                    <OrderStatus order={order} />\n                )\n            },\n            content: {\n                content: (\n                    <>\n                        <List.Header as=\"h3\">\n                            Total: ${order.total}\n                            <Label \n                                content={order.email}\n                                icon=\"mail\"\n                                basic\n                                horizontal\n                                style={{marginLeft: '1em'}}\n                            />\n                        </List.Header>\n                        <List>\n                            {order.products.map(p => (\n                                <List.Item key={p.product._id}>\n                                    <Image avatar src={p.product.mediaUrl} />\n                                    <List.Content>\n                                        <List.Header>\n                                            {p.product.name}\n                                        </List.Header>\n                                        <List.Description>\n                                            {p.quantity} x ${p.product.price}\n                                        </List.Description>\n                                    </List.Content>\n                                    <List.Content floated=\"right\">\n                                        <Label tag color=\"red\" size=\"tiny\">\n                                            {p.product.sku}\n                                        </Label>\n                                    </List.Content>\n                                </List.Item>\n                            ))}\n                        </List>\n                    </>\n                )\n            }\n        }))\n    }\n    return (\n        <>\n            <Header as=\"h2\">\n                <Icon name=\"folder open\" />\n                Orders\n            </Header>\n            {orders.length === 0 ? (\n                <Segment inverted tertiary color=\"pink\" textAlign=\"center\">\n                    <Header icon>\n                        <Icon name=\"copy outline\" />\n                        No Past Orders.\n                    </Header>\n                    <Button onClick={() => router.push('/products')} color=\"violet\">\n                        View Products\n                    </Button>\n                </Segment>\n            ) : (\n                <Accordion \n                    fluid\n                    styled\n                    exclusive={false}\n                    panels={mapOrdersToPanels(orders)}\n                />\n            )}\n        </>\n    );\n}\n\nexport default AllOrders;\n"]},"metadata":{},"sourceType":"module"}