{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar GoTop = function GoTop(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      thePosition = _React$useState2[0],\n      setThePosition = _React$useState2[1];\n\n  var timeoutRef = React.useRef(null);\n  React.useEffect(function () {\n    document.addEventListener(\"scroll\", function () {\n      if (window.scrollY > 170) {\n        setThePosition(true);\n      } else {\n        setThePosition(false);\n      }\n    });\n  }, []);\n\n  var onScrollStep = function onScrollStep() {\n    if (window.pageYOffset === 0) {\n      clearInterval(timeoutRef.current);\n    }\n\n    window.scroll(0, window.pageYOffset - props.scrollStepInPx);\n  };\n\n  var scrollToTop = function scrollToTop() {\n    timeoutRef.current = setInterval(onScrollStep, props.delayInMs);\n  };\n\n  var renderGoTopIcon = function renderGoTopIcon() {\n    return __jsx(\"div\", {\n      className: \"go-top \".concat(thePosition ? 'active' : ''),\n      onClick: scrollToTop\n    }, __jsx(\"i\", {\n      className: \"arrow alternate circle up outline icon\"\n    }));\n  };\n\n  return __jsx(React.Fragment, null, renderGoTopIcon());\n};\n\nexport default GoTop;","map":null,"metadata":{},"sourceType":"module"}