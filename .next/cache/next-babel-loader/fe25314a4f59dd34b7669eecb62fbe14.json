{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Input } from \"semantic-ui-react\";\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport baseUrl from '../../utils/baseUrl';\nimport catchErrors from '../../utils/catchErrors';\n\nvar AddProductToCart = function AddProductToCart(_ref) {\n  var user = _ref.user,\n      productId = _ref.productId;\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      quantity = _React$useState2[0],\n      setQuantity = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      success = _React$useState6[0],\n      setSuccess = _React$useState6[1];\n\n  var router = useRouter();\n  React.useEffect(function () {\n    var timeout;\n\n    if (success) {\n      timeout = setTimeout(function () {\n        setSuccess(false);\n      }, 3000);\n    }\n\n    return function () {\n      clearTimeout(timeout);\n    };\n  }, [success]);\n\n  var handleAddProductToCart = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, payload, token, headers;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setLoading(true);\n              url = \"\".concat(baseUrl, \"/api/cart\");\n              payload = {\n                quantity: quantity,\n                productId: productId\n              };\n              token = cookie.get('token');\n              headers = {\n                headers: {\n                  Authorization: token\n                }\n              };\n              _context.next = 8;\n              return axios.put(url, payload, headers);\n\n            case 8:\n              setSuccess(true);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              catchErrors(_context.t0, window.alert);\n\n            case 14:\n              _context.prev = 14;\n              setLoading(false);\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11, 14, 17]]);\n    }));\n\n    return function handleAddProductToCart() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Input, {\n    type: \"number\",\n    min: \"1\",\n    max: \"10\",\n    placeholder: \"Quantity\",\n    value: quantity,\n    onChange: function onChange(e) {\n      return setQuantity(Number(e.target.value));\n    },\n    action: user && success ? {\n      color: 'blue',\n      content: 'Item Added!',\n      icon: 'plus cart',\n      disabled: true\n    } : user ? {\n      color: 'violet',\n      content: 'Add to Cart',\n      icon: 'plus cart',\n      loading: loading,\n      disbaled: \"\".concat(loading),\n      onClick: handleAddProductToCart\n    } : {\n      color: 'green',\n      content: 'Login to purchase',\n      icon: 'sign-in',\n      onClick: function onClick() {\n        return router.push('/auth/login');\n      }\n    }\n  }));\n};\n\nexport default AddProductToCart;","map":null,"metadata":{},"sourceType":"module"}