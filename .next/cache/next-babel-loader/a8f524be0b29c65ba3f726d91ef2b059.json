{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\walter\\\\Desktop\\\\shoponix-mern-next-ecommerce-store\\\\shoponix\\\\components\\\\Customers\\\\AllCustomers.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Header, Table, Icon } from 'semantic-ui-react';\nimport Gravatar from 'react-gravatar';\nimport formatDate from '../../utils/formatDate';\n\nvar AllCustomers = function AllCustomers(_ref) {\n  var customers = _ref.customers;\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: \"users\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }), \"Customers (\", customers.length, \")\"), __jsx(Table, {\n    celled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(Table.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(Table.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, \"Photo\"), __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \"Name\"), __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"Email\"), __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, \"Joined\"), __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"Updated\"), __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"Role\"))), __jsx(Table.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, customers.map(function (customer) {\n    return __jsx(Table.Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, __jsx(Gravatar, {\n      email: customer.email,\n      size: 50,\n      rating: \"pg\",\n      \"default\": \"monsterid\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    })), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, customer.name), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, customer.email), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, formatDate(customer.createdAt)), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, formatDate(customer.updatedAt)), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, customer.role === 'admin' ? \"Admin\" : \"Customer\"));\n  }))));\n};\n\n_c = AllCustomers;\nexport default AllCustomers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCustomers\");","map":{"version":3,"sources":["C:/Users/walter/Desktop/shoponix-mern-next-ecommerce-store/shoponix/components/Customers/AllCustomers.js"],"names":["Header","Table","Icon","Gravatar","formatDate","AllCustomers","customers","length","map","customer","email","name","createdAt","updatedAt","role"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAiB;AAAA,MAAfC,SAAe,QAAfA,SAAe;AAClC,SACI,4BACA,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,iBAEgBA,SAAS,CAACC,MAF1B,MADA,EAKA,MAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,MAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI,MAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII,MAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI,MAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAMI,MAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,CADJ,CADJ,EAWI,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,SAAS,CAACE,GAAV,CAAc,UAAAC,QAAQ;AAAA,WACnB,MAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,QAAQ,CAACC,KAA1B;AAAiC,MAAA,IAAI,EAAE,EAAvC;AAA2C,MAAA,MAAM,EAAC,IAAlD;AAAuD,iBAAQ,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaD,QAAQ,CAACE,IAAtB,CAJJ,EAKI,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaF,QAAQ,CAACC,KAAtB,CALJ,EAMI,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaN,UAAU,CAACK,QAAQ,CAACG,SAAV,CAAvB,CANJ,EAOI,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaR,UAAU,CAACK,QAAQ,CAACI,SAAV,CAAvB,CAPJ,EAQI,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaJ,QAAQ,CAACK,IAAT,KAAkB,OAAlB,GAA4B,OAA5B,GAAsC,UAAnD,CARJ,CADmB;AAAA,GAAtB,CADL,CAXJ,CALA,CADJ;AAkCH,CAnCD;;KAAMT,Y;AAqCN,eAAeA,YAAf","sourcesContent":["import { Header, Table, Icon } from 'semantic-ui-react';\nimport Gravatar from 'react-gravatar';\nimport formatDate from '../../utils/formatDate';\n\nconst AllCustomers = ({customers}) => {\n    return(\n        <>\n        <Header as=\"h2\">\n            <Icon name=\"users\" />\n            Customers ({customers.length})\n        </Header>\n        <Table celled>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Photo</Table.HeaderCell>\n                    <Table.HeaderCell>Name</Table.HeaderCell>\n                    <Table.HeaderCell>Email</Table.HeaderCell>\n                    <Table.HeaderCell>Joined</Table.HeaderCell>\n                    <Table.HeaderCell>Updated</Table.HeaderCell>\n                    <Table.HeaderCell>Role</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {customers.map(customer => (\n                    <Table.Row>\n                        <Table.Cell>\n                            <Gravatar email={customer.email} size={50} rating=\"pg\" default=\"monsterid\" />\n                        </Table.Cell>\n                        <Table.Cell>{customer.name}</Table.Cell>\n                        <Table.Cell>{customer.email}</Table.Cell>\n                        <Table.Cell>{formatDate(customer.createdAt)}</Table.Cell>\n                        <Table.Cell>{formatDate(customer.updatedAt) }</Table.Cell>\n                        <Table.Cell>{customer.role === 'admin' ? \"Admin\" : \"Customer\"}</Table.Cell>\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n        </>\n    );\n}\n\nexport default AllCustomers;"]},"metadata":{},"sourceType":"module"}