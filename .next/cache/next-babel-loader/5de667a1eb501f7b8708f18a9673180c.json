{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\walter\\\\Desktop\\\\shoponix-mern-next-ecommerce-store\\\\shoponix\\\\pages\\\\cart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { parseCookies } from 'nookies';\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport { Segment } from 'semantic-ui-react';\nimport CartItemList from \"../components/Cart/CartItemList\";\nimport CartSummary from \"../components/Cart/CartSummary\";\nimport baseUrl from '../utils/baseUrl';\nimport catchErrors from '../utils/catchErrors';\n\nconst Cart = ({\n  products,\n  user\n}) => {\n  // console.log(products)\n  const [cartProducts, setCartProducts] = React.useState(products);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleRemoveFromCart = async productId => {\n    const url = `${baseUrl}/api/cart`;\n    const token = cookie.get(\"token\");\n    const payload = {\n      params: {\n        productId\n      },\n      headers: {\n        Authorization: token\n      }\n    };\n    const response = await axios.delete(url, payload);\n    setCartProducts(response.data);\n  };\n\n  const handleCheckout = async paymentData => {\n    try {\n      setLoading(true);\n      const url = `${baseUrl}/api/checkout`;\n      const token = cookie.get(\"token\");\n      const payload = {\n        paymentData\n      };\n      const headers = {\n        headers: {\n          Authorization: token\n        }\n      };\n      await axios.post(url, payload, headers);\n      setSuccess(true);\n    } catch (error) {\n      catchErrors(error, window.alert);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"cart-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Segment, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(CartItemList, {\n    handleRemoveFromCart: handleRemoveFromCart,\n    user: user,\n    products: cartProducts,\n    success: success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), __jsx(CartSummary, {\n    handleCheckout: handleCheckout,\n    products: cartProducts,\n    success: success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })));\n};\n\nCart.getInitialProps = async ctx => {\n  const {\n    token\n  } = parseCookies(ctx);\n\n  if (!token) {\n    return {\n      products: []\n    };\n  }\n\n  const url = `${baseUrl}/api/cart`;\n  const payload = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.get(url, payload);\n  return {\n    products: response.data\n  };\n};\n\nexport default Cart;","map":{"version":3,"sources":["C:/Users/walter/Desktop/shoponix-mern-next-ecommerce-store/shoponix/pages/cart.js"],"names":["React","parseCookies","axios","cookie","Segment","CartItemList","CartSummary","baseUrl","catchErrors","Cart","products","user","cartProducts","setCartProducts","useState","success","setSuccess","loading","setLoading","handleRemoveFromCart","productId","url","token","get","payload","params","headers","Authorization","response","delete","data","handleCheckout","paymentData","post","error","window","alert","getInitialProps","ctx"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACjC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,KAAK,CAACc,QAAN,CAAeJ,QAAf,CAAxC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBhB,KAAK,CAACc,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBlB,KAAK,CAACc,QAAN,CAAe,KAAf,CAA9B;;AAEA,QAAMK,oBAAoB,GAAG,MAAOC,SAAP,IAAqB;AAC9C,UAAMC,GAAG,GAAI,GAAEd,OAAQ,WAAvB;AACA,UAAMe,KAAK,GAAGnB,MAAM,CAACoB,GAAP,CAAW,OAAX,CAAd;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE;AAACL,QAAAA;AAAD,OADI;AAEZM,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAEL;AAAhB;AAFG,KAAhB;AAIA,UAAMM,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,MAAN,CAAaR,GAAb,EAAkBG,OAAlB,CAAvB;AACAX,IAAAA,eAAe,CAACe,QAAQ,CAACE,IAAV,CAAf;AACH,GATD;;AAWA,QAAMC,cAAc,GAAG,MAAOC,WAAP,IAAuB;AAC1C,QAAI;AACAd,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMG,GAAG,GAAI,GAAEd,OAAQ,eAAvB;AACA,YAAMe,KAAK,GAAGnB,MAAM,CAACoB,GAAP,CAAW,OAAX,CAAd;AACA,YAAMC,OAAO,GAAG;AAAEQ,QAAAA;AAAF,OAAhB;AACA,YAAMN,OAAO,GAAG;AAACA,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAEL;AAAhB;AAAV,OAAhB;AACA,YAAMpB,KAAK,CAAC+B,IAAN,CAAWZ,GAAX,EAAgBG,OAAhB,EAAyBE,OAAzB,CAAN;AACAV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KARD,CAQE,OAAOkB,KAAP,EAAc;AACZ1B,MAAAA,WAAW,CAAC0B,KAAD,EAAQC,MAAM,CAACC,KAAf,CAAX;AACH,KAVD,SAUU;AACNlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAdD;;AAgBA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,OAAO,EAAED,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AACI,IAAA,oBAAoB,EAAEE,oBAD1B;AAEI,IAAA,IAAI,EAAER,IAFV;AAGI,IAAA,QAAQ,EAAEC,YAHd;AAII,IAAA,OAAO,EAAEG,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,MAAC,WAAD;AACI,IAAA,cAAc,EAAEgB,cADpB;AAEI,IAAA,QAAQ,EAAEnB,YAFd;AAGI,IAAA,OAAO,EAAEG,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CADJ;AAiBH,CAlDD;;AAoDAN,IAAI,CAAC4B,eAAL,GAAuB,MAAMC,GAAN,IAAa;AAChC,QAAM;AAAEhB,IAAAA;AAAF,MAAYrB,YAAY,CAACqC,GAAD,CAA9B;;AACA,MAAI,CAAChB,KAAL,EAAW;AACP,WAAO;AAAEZ,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACH;;AACD,QAAMW,GAAG,GAAI,GAAEd,OAAQ,WAAvB;AACA,QAAMiB,OAAO,GAAG;AAAEE,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAEL;AAAhB;AAAX,GAAhB;AACA,QAAMM,QAAQ,GAAG,MAAM1B,KAAK,CAACqB,GAAN,CAAUF,GAAV,EAAeG,OAAf,CAAvB;AACA,SAAO;AAAEd,IAAAA,QAAQ,EAAEkB,QAAQ,CAACE;AAArB,GAAP;AACH,CATD;;AAWA,eAAerB,IAAf","sourcesContent":["import React from 'react';\nimport { parseCookies } from 'nookies';\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport { Segment } from 'semantic-ui-react';\nimport CartItemList from \"../components/Cart/CartItemList\"\nimport CartSummary from \"../components/Cart/CartSummary\"\nimport baseUrl from '../utils/baseUrl';\nimport catchErrors from '../utils/catchErrors';\n\nconst Cart = ({ products, user }) => {\n    // console.log(products)\n    const [cartProducts, setCartProducts] = React.useState(products);\n    const [success, setSuccess] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const handleRemoveFromCart = async (productId) => {\n        const url = `${baseUrl}/api/cart`;\n        const token = cookie.get(\"token\");\n        const payload = {\n            params: {productId},\n            headers: {Authorization: token}\n        };\n        const response = await axios.delete(url, payload);\n        setCartProducts(response.data);\n    }\n\n    const handleCheckout = async (paymentData) => {\n        try {\n            setLoading(true);\n            const url = `${baseUrl}/api/checkout`;\n            const token = cookie.get(\"token\");\n            const payload = { paymentData };\n            const headers = {headers: {Authorization: token}};\n            await axios.post(url, payload, headers);\n            setSuccess(true);\n        } catch (error) {\n            catchErrors(error, window.alert);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div className=\"cart-area\">\n            <Segment loading={loading}>\n                <CartItemList \n                    handleRemoveFromCart={handleRemoveFromCart}\n                    user={user} \n                    products={cartProducts} \n                    success={success}\n                />\n                <CartSummary \n                    handleCheckout={handleCheckout}\n                    products={cartProducts} \n                    success={success}\n                />\n            </Segment>\n        </div>\n    );\n}\n\nCart.getInitialProps = async ctx => {\n    const { token } = parseCookies(ctx);\n    if (!token){\n        return { products: [] };\n    }\n    const url = `${baseUrl}/api/cart`;\n    const payload = { headers: {Authorization: token} };\n    const response = await axios.get(url, payload);\n    return { products: response.data };\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}