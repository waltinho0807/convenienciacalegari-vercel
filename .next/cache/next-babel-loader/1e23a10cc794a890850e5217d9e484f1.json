{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\walter\\\\Desktop\\\\shoponix-mern-next-ecommerce-store\\\\shoponix\\\\components\\\\Product\\\\AddProductToCart.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Input } from \"semantic-ui-react\";\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport baseUrl from '../../utils/baseUrl';\nimport catchErrors from '../../utils/catchErrors';\n\nvar AddProductToCart = function AddProductToCart(_ref) {\n  _s();\n\n  var user = _ref.user,\n      productId = _ref.productId;\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      quantity = _React$useState2[0],\n      setQuantity = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      success = _React$useState6[0],\n      setSuccess = _React$useState6[1];\n\n  var router = useRouter();\n  React.useEffect(function () {\n    var timeout;\n\n    if (success) {\n      timeout = setTimeout(function () {\n        setSuccess(false);\n      }, 3000);\n    }\n\n    return function () {\n      clearTimeout(timeout);\n    };\n  }, [success]);\n\n  var handleAddProductToCart = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, payload, token, headers;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setLoading(true);\n              url = \"\".concat(baseUrl, \"/api/cart\");\n              payload = {\n                quantity: quantity,\n                productId: productId\n              };\n              token = cookie.get('token');\n              headers = {\n                headers: {\n                  Authorization: token\n                }\n              };\n              _context.next = 8;\n              return axios.put(url, payload, headers);\n\n            case 8:\n              setSuccess(true);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              catchErrors(_context.t0, window.alert);\n\n            case 14:\n              _context.prev = 14;\n              setLoading(false);\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11, 14, 17]]);\n    }));\n\n    return function handleAddProductToCart() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    min: \"1\",\n    max: \"10\",\n    placeholder: \"Quantity\",\n    value: quantity,\n    onChange: function onChange(e) {\n      return setQuantity(Number(e.target.value));\n    },\n    action: user && success ? {\n      color: 'blue',\n      content: 'Item Added!',\n      icon: 'plus cart',\n      disabled: true\n    } : user ? {\n      color: 'violet',\n      content: 'Add to Cart',\n      icon: 'plus cart',\n      loading: loading,\n      disbaled: \"\".concat(loading),\n      onClick: handleAddProductToCart\n    } : {\n      color: 'green',\n      content: 'Login to purchase',\n      icon: 'sign-in',\n      onClick: function onClick() {\n        return router.push('/auth/login');\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(AddProductToCart, \"0M2Ft7QmlbJJrhjfr405Uv962ac=\", false, function () {\n  return [useRouter];\n});\n\n_c = AddProductToCart;\nexport default AddProductToCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductToCart\");","map":{"version":3,"sources":["C:/Users/walter/Desktop/shoponix-mern-next-ecommerce-store/shoponix/components/Product/AddProductToCart.js"],"names":["React","Input","useRouter","axios","cookie","baseUrl","catchErrors","AddProductToCart","user","productId","useState","quantity","setQuantity","loading","setLoading","success","setSuccess","router","useEffect","timeout","setTimeout","clearTimeout","handleAddProductToCart","url","payload","token","get","headers","Authorization","put","window","alert","e","Number","target","value","color","content","icon","disabled","disbaled","onClick","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input } from \"semantic-ui-react\";\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport baseUrl from '../../utils/baseUrl';\nimport catchErrors from '../../utils/catchErrors';\n\nconst AddProductToCart = ({ user, productId }) => {\n    const [quantity, setQuantity] = React.useState(1);\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const router = useRouter();\n\n    React.useEffect(() => {\n        let timeout;\n        if (success){\n            timeout = setTimeout(() => {\n                setSuccess(false)\n            }, 3000);\n        }\n        return () => {\n            clearTimeout(timeout);\n        }\n    }, [success])\n\n    const handleAddProductToCart = async () => {\n        try {\n            setLoading(true);\n            const url = `${baseUrl}/api/cart`;\n            const payload = { quantity, productId };\n            const token = cookie.get('token');\n            const headers = { headers: {Authorization: token} };\n            await axios.put(url, payload, headers);\n            setSuccess(true);\n        } catch (error) {\n            catchErrors(error, window.alert);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Input \n                type=\"number\"\n                min=\"1\"\n                max=\"10\"\n                placeholder=\"Quantity\"\n                value={quantity}\n                onChange={e => setQuantity(Number(e.target.value))}\n                action={\n                    user && success ? {\n                        color: 'blue',\n                        content: 'Item Added!',\n                        icon: 'plus cart',\n                        disabled: true\n                    } : \n                    user ? {\n                    color: 'violet',\n                    content: 'Add to Cart',\n                    icon: 'plus cart',\n                    loading: loading,\n                    disbaled: `${loading}`,\n                    onClick: handleAddProductToCart\n                } : {\n                    color: 'green',\n                    content: 'Login to purchase',\n                    icon: 'sign-in',\n                    onClick: () => router.push('/auth/login')\n                }}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default AddProductToCart;\n"]},"metadata":{},"sourceType":"module"}